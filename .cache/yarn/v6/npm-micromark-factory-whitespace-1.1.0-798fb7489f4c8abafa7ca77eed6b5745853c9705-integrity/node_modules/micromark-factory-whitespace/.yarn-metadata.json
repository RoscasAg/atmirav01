{
  "manifest": {
    "name": "micromark-factory-whitespace",
    "version": "1.1.0",
    "description": "micromark factory to parse markdown whitespace (found in lots of places)",
    "license": "MIT",
    "keywords": [
      "micromark",
      "factory",
      "whitespace"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/micromark/micromark/tree/main/packages/micromark-factory-whitespace"
    },
    "bugs": {
      "url": "https://github.com/micromark/micromark/issues"
    },
    "funding": [
      {
        "type": "GitHub Sponsors",
        "url": "https://github.com/sponsors/unifiedjs"
      },
      {
        "type": "OpenCollective",
        "url": "https://opencollective.com/unified"
      }
    ],
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "dev/index.d.ts",
    "files": [
      "dev/",
      "index.d.ts",
      "index.js"
    ],
    "exports": {
      "types": "./dev/index.d.ts",
      "development": "./dev/index.js",
      "default": "./index.js"
    },
    "dependencies": {
      "micromark-factory-space": "^1.0.0",
      "micromark-util-character": "^1.0.0",
      "micromark-util-symbol": "^1.0.0",
      "micromark-util-types": "^1.0.0"
    },
    "scripts": {
      "build": "micromark-build"
    },
    "xo": false,
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/home/runner/ITACA-v31/.cache/yarn/v6/npm-micromark-factory-whitespace-1.1.0-798fb7489f4c8abafa7ca77eed6b5745853c9705-integrity/node_modules/micromark-factory-whitespace/package.json",
    "readmeFilename": "readme.md",
    "readme": "# micromark-factory-whitespace\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][bundle-size-badge]][bundle-size]\n[![Sponsors][sponsors-badge]][opencollective]\n[![Backers][backers-badge]][opencollective]\n[![Chat][chat-badge]][chat]\n\n[micromark][] factory to parse [markdown line endings or spaces][ws] (found in\nlots of places).\n\n## Contents\n\n*   [What is this?](#what-is-this)\n*   [When should I use this?](#when-should-i-use-this)\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`factoryWhitespace(…)`](#factorywhitespace)\n*   [Types](#types)\n*   [Compatibility](#compatibility)\n*   [Security](#security)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## What is this?\n\nThis package exposes states to parse whitespace.\n\n## When should I use this?\n\nThis package is useful when you are making your own micromark extensions.\n\n## Install\n\nThis package is [ESM only][esm].\nIn Node.js (version 16+), install with [npm][]:\n\n```sh\nnpm install micromark-factory-whitespace\n```\n\nIn Deno with [`esm.sh`][esmsh]:\n\n```js\nimport {factoryWhitespace} from 'https://esm.sh/micromark-factory-whitespace@1'\n```\n\nIn browsers with [`esm.sh`][esmsh]:\n\n```html\n<script type=\"module\">\n  import {factoryWhitespace} from 'https://esm.sh/micromark-factory-whitespace@1?bundle'\n</script>\n```\n\n## Use\n\n```js\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {codes} from 'micromark-util-symbol/codes'\nimport {types} from 'micromark-util-symbol/types'\n\n// A micromark tokenizer that uses the factory:\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  // …\n}\n```\n\n## API\n\nThis module exports the identifier\n[`factoryWhitespace`][api-factory-whitespace].\nThere is no default export.\n\n### `factoryWhitespace(…)`\n\nParse spaces and tabs.\n\nThere is no `nok` parameter:\n\n*   line endings or spaces in markdown are often optional, in which case this\n    factory can be used and `ok` will be switched to whether spaces were found\n    or not\n*   one line ending or space can be detected with\n    [`markdownLineEndingOrSpace(code)`][ws] right before using\n    `factoryWhitespace`\n\n###### Parameters\n\n*   `effects` (`Effects`)\n    — context\n*   `ok` (`State`)\n    — state switched to when successful\n\n###### Returns\n\nStart state (`State`).\n\n## Types\n\nThis package is fully typed with [TypeScript][].\nIt exports no additional types.\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with all maintained\nversions of Node.js.\nAs of now, that is Node.js 16+.\nOur projects sometimes work with older versions, but this is not guaranteed.\n\nThis package works with `micromark` version 3+.\n\n## Security\n\nThis package is safe.\nSee [`security.md`][securitymd] in [`micromark/.github`][health] for how to\nsubmit a security report.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`micromark/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organisation, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/micromark/micromark/workflows/main/badge.svg\n\n[build]: https://github.com/micromark/micromark/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/micromark/micromark.svg\n\n[coverage]: https://codecov.io/github/micromark/micromark\n\n[downloads-badge]: https://img.shields.io/npm/dm/micromark-factory-whitespace.svg\n\n[downloads]: https://www.npmjs.com/package/micromark-factory-whitespace\n\n[bundle-size-badge]: https://img.shields.io/badge/dynamic/json?label=minzipped%20size&query=$.size.compressedSize&url=https://deno.bundlejs.com/?q=micromark-factory-whitespace\n\n[bundle-size]: https://bundlejs.com/?q=micromark-factory-whitespace\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[opencollective]: https://opencollective.com/unified\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[esm]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c\n\n[esmsh]: https://esm.sh\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/micromark/micromark/discussions\n\n[license]: https://github.com/micromark/micromark/blob/main/license\n\n[author]: https://wooorm.com\n\n[health]: https://github.com/micromark/.github\n\n[securitymd]: https://github.com/micromark/.github/blob/main/security.md\n\n[contributing]: https://github.com/micromark/.github/blob/main/contributing.md\n\n[support]: https://github.com/micromark/.github/blob/main/support.md\n\n[coc]: https://github.com/micromark/.github/blob/main/code-of-conduct.md\n\n[ws]: https://github.com/micromark/micromark/tree/main/packages/micromark-util-character#markdownlineendingorspacecode\n\n[typescript]: https://www.typescriptlang.org\n\n[micromark]: https://github.com/micromark/micromark\n\n[api-factory-whitespace]: #factorywhitespace\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/micromark-factory-whitespace/-/micromark-factory-whitespace-1.1.0.tgz#798fb7489f4c8abafa7ca77eed6b5745853c9705",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/micromark-factory-whitespace/-/micromark-factory-whitespace-1.1.0.tgz",
    "hash": "798fb7489f4c8abafa7ca77eed6b5745853c9705",
    "integrity": "sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ==",
    "registry": "npm",
    "packageName": "micromark-factory-whitespace",
    "cacheIntegrity": "sha512-v2WlmiymVSp5oMg+1Q0N1Lxmt6pMhIHD457whWM7/GUlEks1hI9xj5w3zbc4uuMKXGisksZk8DzP2UyGbGqNsQ== sha1-eY+3SJ9Mirr6fKd+7WtXRYU8lwU="
  },
  "registry": "npm",
  "hash": "798fb7489f4c8abafa7ca77eed6b5745853c9705"
}